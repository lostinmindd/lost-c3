import type { Param } from "../../params/Param";
import type { EntityOptions } from "./Entity";
export interface ExpressionOptions extends EntityOptions {
    /**
     * One of "number", "string", "any".
     * The runtime function must return the corresponding type, and "any" must still return either a number or a string.
     */
    ReturnType: 'number' | 'string' | 'any';
    /**
     * If true, Construct 3 will allow the user to enter any number of parameters beyond those defined.
     * In other words the parameters (if any) listed in "params" are required, but this flag enables adding further "any" type parameters beyond the end.
     */
    IsVariadicParameters?: boolean;
    Params?: Param[];
}
export declare function Expression(Options: ExpressionOptions): any;
